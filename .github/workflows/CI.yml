# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
      - README.md
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        enApiMode: ["enMock", "enProd"]
        enApiVersion: ["legacyV1", "exposureWindow"]
        type: ["Debug", "Release"]
    steps:
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts*') }}
          restore-keys: ${{ runner.os }}-gradle.kts-
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts*') }}
          restore-keys: ${{ runner.os }}-gradle.kts-
      - uses: actions/checkout@v2
      - name: Build Debug
        run: ./gradlew assemble${{ matrix.enApiMode }}${{ matrix.enApiVersion }}${{ matrix.type }}
  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts*') }}
          restore-keys: ${{ runner.os }}-gradle.kts-
      - uses: actions/checkout@v2
      - name: Unit Tests
        run: ./gradlew test
  androidTest:
    runs-on: ubuntu-latest
    # needs: [test]
    steps:
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts*') }}
          restore-keys: ${{ runner.os }}-gradle.kts-
      - uses: actions/checkout@v2
      - name: Android Emulator Runner
        uses: ReactiveCircus/android-emulator-runner@v2.22.0
        with:
          api-level: 30
          arch: x86_64
          script: |
            sdkmanager --list
            ./gradlew connectedCheck
